# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_01_DummyInvoke.baseline

# Run progress: 0.00% complete, ETA 00:15:40
# Fork: 1 of 2
# Warmup Iteration   1: 69860420.890 ops/s
# Warmup Iteration   2: 473884770.373 ops/s
# Warmup Iteration   3: 2052409271.923 ops/s
Iteration   1: 2098912247.140 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    8098.000 ms

Iteration   2: 2049220937.296 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    8338.000 ms


# Run progress: 1.06% complete, ETA 00:22:57
# Fork: 2 of 2
# Warmup Iteration   1: 271471244.588 ops/s
# Warmup Iteration   2: 1842776946.489 ops/s
# Warmup Iteration   3: 1958122557.251 ops/s
Iteration   1: 1881168138.364 ops/s
                 ·compiler.time.profiled: 264.000 ms
                 ·compiler.time.total:    6323.000 ms

Iteration   2: 1995446538.841 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6390.000 ms



Result "org.sample.JMHBenchmark_01_DummyInvoke.baseline":
  2006186965.410 ±(99.9%) 603829762.557 ops/s [Average]
  (min, avg, max) = (1881168138.364, 2006186965.410, 2098912247.140), stdev = 93443324.154
  CI (99.9%): [1402357202.854, 2610016727.967] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_01_DummyInvoke.baseline:·compiler.time.profiled":
  265.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 66.250, 264.000), stdev = 131.834
  CI (99.9%): [265.000, 265.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_01_DummyInvoke.baseline:·compiler.time.total":
  8338.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6323.000, 7287.250, 8338.000), stdev = 1079.541
  CI (99.9%): [8338.000, 8338.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod

# Run progress: 2.13% complete, ETA 00:22:27
# Fork: 1 of 2
# Warmup Iteration   1: 374472479.060 ops/s
# Warmup Iteration   2: 1916334958.701 ops/s
# Warmup Iteration   3: 2008600846.545 ops/s
Iteration   1: 2002617245.157 ops/s
                 ·compiler.time.profiled: 3.000 ms
                 ·compiler.time.total:    5477.000 ms

Iteration   2: 1968273451.402 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5800.000 ms


# Run progress: 3.19% complete, ETA 00:22:12
# Fork: 2 of 2
# Warmup Iteration   1: 351383280.846 ops/s
# Warmup Iteration   2: 1828575164.665 ops/s
# Warmup Iteration   3: 2016047061.734 ops/s
Iteration   1: 1987524961.497 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5681.000 ms

Iteration   2: 2033041210.423 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5760.000 ms



Result "org.sample.JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod":
  1997864217.120 ±(99.9%) 176674686.071 ops/s [Average]
  (min, avg, max) = (1968273451.402, 1997864217.120, 2033041210.423), stdev = 27340603.236
  CI (99.9%): [1821189531.048, 2174538903.191] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod:·compiler.time.profiled":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.750, 3.000), stdev = 1.500
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod:·compiler.time.total":
  5800.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5477.000, 5679.500, 5800.000), stdev = 143.769
  CI (99.9%): [5800.000, 5800.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_02_InvokeWithReturn.baseline

# Run progress: 4.26% complete, ETA 00:21:55
# Fork: 1 of 2
# Warmup Iteration   1: 510748239.960 ops/s
# Warmup Iteration   2: 1939156496.979 ops/s
# Warmup Iteration   3: 2041410015.629 ops/s
Iteration   1: 2027902182.997 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5642.000 ms

Iteration   2: 2037711771.126 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5748.000 ms


# Run progress: 5.32% complete, ETA 00:21:41
# Fork: 2 of 2
# Warmup Iteration   1: 486524523.812 ops/s
# Warmup Iteration   2: 1969330577.962 ops/s
# Warmup Iteration   3: 2038448845.351 ops/s
Iteration   1: 2023282564.304 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5318.000 ms

Iteration   2: 2013974258.354 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5473.000 ms



Result "org.sample.JMHBenchmark_02_InvokeWithReturn.baseline":
  2025717694.195 ±(99.9%) 63803543.297 ops/s [Average]
  (min, avg, max) = (2013974258.354, 2025717694.195, 2037711771.126), stdev = 9873668.951
  CI (99.9%): [1961914150.898, 2089521237.492] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.baseline:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.baseline:·compiler.time.total":
  5748.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5318.000, 5545.250, 5748.000), stdev = 189.148
  CI (99.9%): [5748.000, 5748.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_02_InvokeWithReturn.noInvocation

# Run progress: 6.38% complete, ETA 00:21:26
# Fork: 1 of 2
# Warmup Iteration   1: 56607940.605 ops/s
# Warmup Iteration   2: 201666534.389 ops/s
# Warmup Iteration   3: 206473558.515 ops/s
Iteration   1: 212589251.010 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5373.000 ms

Iteration   2: 210571636.949 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5457.000 ms


# Run progress: 7.45% complete, ETA 00:21:10
# Fork: 2 of 2
# Warmup Iteration   1: 53562559.683 ops/s
# Warmup Iteration   2: 199381228.661 ops/s
# Warmup Iteration   3: 204079041.497 ops/s
Iteration   1: 206808460.191 ops/s
                 ·compiler.time.profiled: 2.000 ms
                 ·compiler.time.total:    5614.000 ms

Iteration   2: 209530207.612 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5794.000 ms



Result "org.sample.JMHBenchmark_02_InvokeWithReturn.noInvocation":
  209874888.940 ±(99.9%) 15551351.462 ops/s [Average]
  (min, avg, max) = (206808460.191, 209874888.940, 212589251.010), stdev = 2406588.853
  CI (99.9%): [194323537.478, 225426240.403] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.noInvocation:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 2.000), stdev = 1.000
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.noInvocation:·compiler.time.total":
  5794.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5373.000, 5559.500, 5794.000), stdev = 185.516
  CI (99.9%): [5794.000, 5794.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh

# Run progress: 8.51% complete, ETA 00:20:54
# Fork: 1 of 2
# Warmup Iteration   1: 61214808.328 ops/s
# Warmup Iteration   2: 197286534.327 ops/s
# Warmup Iteration   3: 207804225.333 ops/s
Iteration   1: 210651710.601 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5560.000 ms

Iteration   2: 151875032.880 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5700.000 ms


# Run progress: 9.57% complete, ETA 00:20:38
# Fork: 2 of 2
# Warmup Iteration   1: 35012778.280 ops/s
# Warmup Iteration   2: 93806140.238 ops/s
# Warmup Iteration   3: 139232524.984 ops/s
Iteration   1: 144574130.870 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7611.000 ms

Iteration   2: 144852190.846 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7612.000 ms



Result "org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh":
  162988266.299 ±(99.9%) 206490826.934 ops/s [Average]
  (min, avg, max) = (144574130.870, 162988266.299, 210651710.601), stdev = 31954684.040
  CI (99.9%): [≈ 0, 369479093.234] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh:·compiler.time.total":
  7612.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5560.000, 6620.750, 7612.000), stdev = 1145.446
  CI (99.9%): [7612.000, 7612.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue

# Run progress: 10.64% complete, ETA 00:20:24
# Fork: 1 of 2
# Warmup Iteration   1: 21911084.645 ops/s
# Warmup Iteration   2: 43595176.345 ops/s
# Warmup Iteration   3: 112458439.337 ops/s
Iteration   1: 144744285.735 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    11166.000 ms

Iteration   2: 144634416.792 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    11167.000 ms


# Run progress: 11.70% complete, ETA 00:20:18
# Fork: 2 of 2
# Warmup Iteration   1: 43570342.024 ops/s
# Warmup Iteration   2: 206104055.421 ops/s
# Warmup Iteration   3: 216536931.822 ops/s
Iteration   1: 216526353.571 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5858.000 ms

Iteration   2: 216076483.751 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6199.000 ms



Result "org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue":
  180495384.962 ±(99.9%) 267175333.660 ops/s [Average]
  (min, avg, max) = (144634416.792, 180495384.962, 216526353.571), stdev = 41345678.629
  CI (99.9%): [≈ 0, 447670718.622] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue:·compiler.time.total":
  11167.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5858.000, 8597.500, 11167.000), stdev = 2969.691
  CI (99.9%): [11167.000, 11167.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.baseline

# Run progress: 12.77% complete, ETA 00:20:04
# Fork: 1 of 2
# Warmup Iteration   1: 669494582.955 ops/s
# Warmup Iteration   2: 2006607532.084 ops/s
# Warmup Iteration   3: 2071954490.110 ops/s
Iteration   1: 2100030866.388 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    4959.000 ms

Iteration   2: 1993896322.442 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5273.000 ms


# Run progress: 13.83% complete, ETA 00:19:47
# Fork: 2 of 2
# Warmup Iteration   1: 573657543.997 ops/s
# Warmup Iteration   2: 1637387919.057 ops/s
# Warmup Iteration   3: 2077543564.019 ops/s
Iteration   1: 2093585408.261 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5406.000 ms

Iteration   2: 2109845483.060 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5490.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.baseline":
  2074339520.038 ±(99.9%) 349231135.584 ops/s [Average]
  (min, avg, max) = (1993896322.442, 2074339520.038, 2109845483.060), stdev = 54043904.807
  CI (99.9%): [1725108384.454, 2423570655.622] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.baseline:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.baseline:·compiler.time.total":
  5490.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (4959.000, 5282.000, 5490.000), stdev = 233.131
  CI (99.9%): [5490.000, 5490.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue

# Run progress: 14.89% complete, ETA 00:19:31
# Fork: 1 of 2
# Warmup Iteration   1: 61810272.699 ops/s
# Warmup Iteration   2: 170962921.284 ops/s
# Warmup Iteration   3: 217783650.760 ops/s
Iteration   1: 214331893.336 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5550.000 ms

Iteration   2: 217825464.411 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5584.000 ms


# Run progress: 15.96% complete, ETA 00:19:14
# Fork: 2 of 2
# Warmup Iteration   1: 71032039.872 ops/s
# Warmup Iteration   2: 207270839.387 ops/s
# Warmup Iteration   3: 218302999.761 ops/s
Iteration   1: 207679917.270 ops/s
                 ·compiler.time.profiled: 202.000 ms
                 ·compiler.time.total:    5453.000 ms

Iteration   2: 218538731.822 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5454.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue":
  214594001.710 ±(99.9%) 32067034.393 ops/s [Average]
  (min, avg, max) = (207679917.270, 214594001.710, 218538731.822), stdev = 4962409.068
  CI (99.9%): [182526967.317, 246661036.102] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue:·compiler.time.profiled":
  205.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 51.250, 202.000), stdev = 100.500
  CI (99.9%): [205.000, 205.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue:·compiler.time.total":
  5584.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5453.000, 5510.250, 5584.000), stdev = 66.984
  CI (99.9%): [5584.000, 5584.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline

# Run progress: 17.02% complete, ETA 00:18:59
# Fork: 1 of 2
# Warmup Iteration   1: 94405504.381 ops/s
# Warmup Iteration   2: 368596575.830 ops/s
# Warmup Iteration   3: 388703431.313 ops/s
Iteration   1: 388057356.541 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5103.000 ms

Iteration   2: 383295643.596 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5187.000 ms


# Run progress: 18.09% complete, ETA 00:18:42
# Fork: 2 of 2
# Warmup Iteration   1: 105146712.665 ops/s
# Warmup Iteration   2: 370712227.344 ops/s
# Warmup Iteration   3: 388250807.650 ops/s
Iteration   1: 386888508.974 ops/s
                 ·compiler.time.profiled: 16.000 ms
                 ·compiler.time.total:    5038.000 ms

Iteration   2: 387206997.495 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5213.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline":
  386362126.652 ±(99.9%) 13589656.128 ops/s [Average]
  (min, avg, max) = (383295643.596, 386362126.652, 388057356.541), stdev = 2103014.329
  CI (99.9%): [372772470.524, 399951782.780] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline:·compiler.time.profiled":
  17.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 4.250, 16.000), stdev = 7.848
  CI (99.9%): [17.000, 17.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline:·compiler.time.total":
  5213.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5038.000, 5135.250, 5213.000), stdev = 80.043
  CI (99.9%): [5213.000, 5213.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh

# Run progress: 19.15% complete, ETA 00:18:26
# Fork: 1 of 2
# Warmup Iteration   1: 35044286.176 ops/s
# Warmup Iteration   2: 113442145.648 ops/s
# Warmup Iteration   3: 115989911.704 ops/s
Iteration   1: 115925746.724 ops/s
                 ·compiler.time.profiled: 3.000 ms
                 ·compiler.time.total:    4959.000 ms

Iteration   2: 115748793.903 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5162.000 ms


# Run progress: 20.21% complete, ETA 00:18:10
# Fork: 2 of 2
# Warmup Iteration   1: 31283114.050 ops/s
# Warmup Iteration   2: 113942965.479 ops/s
# Warmup Iteration   3: 114800260.151 ops/s
Iteration   1: 115538562.715 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5419.000 ms

Iteration   2: 115530893.983 ops/s
                 ·compiler.time.profiled: 2.000 ms
                 ·compiler.time.total:    5501.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh":
  115685999.331 ±(99.9%) 1221624.771 ops/s [Average]
  (min, avg, max) = (115530893.983, 115685999.331, 115925746.724), stdev = 189047.785
  CI (99.9%): [114464374.561, 116907624.102] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh:·compiler.time.profiled":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.250, 3.000), stdev = 1.500
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh:·compiler.time.total":
  5501.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (4959.000, 5260.250, 5501.000), stdev = 247.364
  CI (99.9%): [5501.000, 5501.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline

# Run progress: 21.28% complete, ETA 00:17:54
# Fork: 1 of 2
# Warmup Iteration   1: 534669654.916 ops/s
# Warmup Iteration   2: 2045984946.096 ops/s
# Warmup Iteration   3: 2067657645.052 ops/s
Iteration   1: 2089117801.803 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    4926.000 ms

Iteration   2: 2089393550.577 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5118.000 ms


# Run progress: 22.34% complete, ETA 00:17:39
# Fork: 2 of 2
# Warmup Iteration   1: 564882327.504 ops/s
# Warmup Iteration   2: 2050732263.454 ops/s
# Warmup Iteration   3: 2068438898.765 ops/s
Iteration   1: 2113017111.857 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    4931.000 ms

Iteration   2: 2082097299.395 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5133.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline":
  2093406440.908 ±(99.9%) 87254469.801 ops/s [Average]
  (min, avg, max) = (2082097299.395, 2093406440.908, 2113017111.857), stdev = 13502725.787
  CI (99.9%): [2006151971.107, 2180660910.709] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline:·compiler.time.total":
  5133.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (4926.000, 5027.000, 5133.000), stdev = 113.921
  CI (99.9%): [5133.000, 5133.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh

# Run progress: 23.40% complete, ETA 00:17:24
# Fork: 1 of 2
# Warmup Iteration   1: 66000398.581 ops/s
# Warmup Iteration   2: 213651293.832 ops/s
# Warmup Iteration   3: 215878755.288 ops/s
Iteration   1: 217772231.635 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5174.000 ms

Iteration   2: 217593199.294 ops/s
                 ·compiler.time.profiled: 8.000 ms
                 ·compiler.time.total:    5182.000 ms


# Run progress: 24.47% complete, ETA 00:17:08
# Fork: 2 of 2
# Warmup Iteration   1: 62318428.911 ops/s
# Warmup Iteration   2: 209940917.627 ops/s
# Warmup Iteration   3: 216549345.197 ops/s
Iteration   1: 215514632.781 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5046.000 ms

Iteration   2: 215405472.801 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5051.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh":
  216571384.128 ±(99.9%) 8310809.659 ops/s [Average]
  (min, avg, max) = (215405472.801, 216571384.128, 217772231.635), stdev = 1286106.994
  CI (99.9%): [208260574.469, 224882193.787] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh:·compiler.time.profiled":
  9.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 2.250, 8.000), stdev = 3.862
  CI (99.9%): [9.000, 9.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh:·compiler.time.total":
  5182.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5046.000, 5113.250, 5182.000), stdev = 74.866
  CI (99.9%): [5182.000, 5182.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline

# Run progress: 25.53% complete, ETA 00:16:53
# Fork: 1 of 2
# Warmup Iteration   1: 33765409.517 ops/s
# Warmup Iteration   2: 109735797.680 ops/s
# Warmup Iteration   3: 115173317.856 ops/s
Iteration   1: 115223992.000 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5158.000 ms

Iteration   2: 115994074.063 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5187.000 ms


# Run progress: 26.60% complete, ETA 00:16:38
# Fork: 2 of 2
# Warmup Iteration   1: 36964560.690 ops/s
# Warmup Iteration   2: 113268609.921 ops/s
# Warmup Iteration   3: 115996367.747 ops/s
Iteration   1: 116203006.828 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5157.000 ms

Iteration   2: 115392943.017 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5160.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline":
  115703503.977 ±(99.9%) 3031662.379 ops/s [Average]
  (min, avg, max) = (115223992.000, 115703503.977, 116203006.828), stdev = 469153.109
  CI (99.9%): [112671841.598, 118735166.355] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline:·compiler.time.total":
  5187.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5157.000, 5165.500, 5187.000), stdev = 14.387
  CI (99.9%): [5187.000, 5187.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline

# Run progress: 27.66% complete, ETA 00:16:23
# Fork: 1 of 2
# Warmup Iteration   1: 61208546.697 ops/s
# Warmup Iteration   2: 208426947.589 ops/s
# Warmup Iteration   3: 212776826.519 ops/s
Iteration   1: 196984588.419 ops/s
                 ·compiler.time.profiled: 41.000 ms
                 ·compiler.time.total:    5154.000 ms

Iteration   2: 205696751.934 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5155.000 ms


# Run progress: 28.72% complete, ETA 00:16:08
# Fork: 2 of 2
# Warmup Iteration   1: 61813772.695 ops/s
# Warmup Iteration   2: 197074207.585 ops/s
# Warmup Iteration   3: 216333293.402 ops/s
Iteration   1: 217015026.751 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5098.000 ms

Iteration   2: 214560643.439 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5099.000 ms



Result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline":
  208564252.636 ±(99.9%) 58952266.070 ops/s [Average]
  (min, avg, max) = (196984588.419, 208564252.636, 217015026.751), stdev = 9122928.431
  CI (99.9%): [149611986.565, 267516518.706] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline:·compiler.time.profiled":
  43.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 10.750, 41.000), stdev = 20.172
  CI (99.9%): [43.000, 43.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline:·compiler.time.total":
  5155.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5098.000, 5126.500, 5155.000), stdev = 32.337
  CI (99.9%): [5155.000, 5155.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_04_DummyInvokeWithValue.baseline

# Run progress: 29.79% complete, ETA 00:15:53
# Fork: 1 of 2
# Warmup Iteration   1: 402939152.027 ops/s
# Warmup Iteration   2: 1755276387.436 ops/s
# Warmup Iteration   3: 1951354691.259 ops/s
Iteration   1: 1704008535.004 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5576.000 ms

Iteration   2: 1720539521.400 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5584.000 ms


# Run progress: 30.85% complete, ETA 00:15:38
# Fork: 2 of 2
# Warmup Iteration   1: 277007261.707 ops/s
# Warmup Iteration   2: 1882687546.207 ops/s
# Warmup Iteration   3: 1978654070.273 ops/s
Iteration   1: 2001074009.723 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6263.000 ms

Iteration   2: 1937798534.911 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6356.000 ms



Result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.baseline":
  1840855150.260 ±(99.9%) 974818089.363 ops/s [Average]
  (min, avg, max) = (1704008535.004, 1840855150.260, 2001074009.723), stdev = 150854178.387
  CI (99.9%): [866037060.896, 2815673239.623] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.baseline:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.baseline:·compiler.time.total":
  6356.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5576.000, 5944.750, 6356.000), stdev = 422.897
  CI (99.9%): [6356.000, 6356.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue

# Run progress: 31.91% complete, ETA 00:15:24
# Fork: 1 of 2
# Warmup Iteration   1: 44115843.145 ops/s
# Warmup Iteration   2: 190268887.358 ops/s
# Warmup Iteration   3: 195736533.320 ops/s
Iteration   1: 188505597.175 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6130.000 ms

Iteration   2: 166817105.361 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6133.000 ms


# Run progress: 32.98% complete, ETA 00:15:10
# Fork: 2 of 2
# Warmup Iteration   1: 33436560.908 ops/s
# Warmup Iteration   2: 131901025.245 ops/s
# Warmup Iteration   3: 176246933.530 ops/s
Iteration   1: 201346035.245 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6888.000 ms

Iteration   2: 189901254.792 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6893.000 ms



Result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue":
  186642498.143 ±(99.9%) 93146151.097 ops/s [Average]
  (min, avg, max) = (166817105.361, 186642498.143, 201346035.245), stdev = 14414469.989
  CI (99.9%): [93496347.046, 279788649.240] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue:·compiler.time.total":
  6893.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6130.000, 6511.000, 6893.000), stdev = 438.215
  CI (99.9%): [6893.000, 6893.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue

# Run progress: 34.04% complete, ETA 00:14:56
# Fork: 1 of 2
# Warmup Iteration   1: 43081975.140 ops/s
# Warmup Iteration   2: 130023048.167 ops/s
# Warmup Iteration   3: 184851523.469 ops/s
Iteration   1: 180961538.210 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6609.000 ms

Iteration   2: 165817846.800 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6765.000 ms


# Run progress: 35.11% complete, ETA 00:14:41
# Fork: 2 of 2
# Warmup Iteration   1: 37296194.099 ops/s
# Warmup Iteration   2: 183534930.465 ops/s
# Warmup Iteration   3: 175679180.000 ops/s
Iteration   1: 188388068.464 ops/s
                 ·compiler.time.profiled: 171.000 ms
                 ·compiler.time.total:    6738.000 ms

Iteration   2: 192125718.447 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6835.000 ms



Result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue":
  181823292.980 ±(99.9%) 75188346.722 ops/s [Average]
  (min, avg, max) = (165817846.800, 181823292.980, 192125718.447), stdev = 11635479.884
  CI (99.9%): [106634946.258, 257011639.702] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue:·compiler.time.profiled":
  172.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 43.000, 171.000), stdev = 85.335
  CI (99.9%): [172.000, 172.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue:·compiler.time.total":
  6835.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6609.000, 6736.750, 6835.000), stdev = 94.468
  CI (99.9%): [6835.000, 6835.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod

# Run progress: 36.17% complete, ETA 00:14:28
# Fork: 1 of 2
# Warmup Iteration   1: 345202130.016 ops/s
# Warmup Iteration   2: 1880890626.953 ops/s
# Warmup Iteration   3: 1860930680.810 ops/s
Iteration   1: 1924608680.384 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5672.000 ms

Iteration   2: 1924103165.336 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5672.000 ms


# Run progress: 37.23% complete, ETA 00:14:14
# Fork: 2 of 2
# Warmup Iteration   1: 264121125.365 ops/s
# Warmup Iteration   2: 1380939885.381 ops/s
# Warmup Iteration   3: 1759339335.073 ops/s
Iteration   1: 2024105569.065 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6318.000 ms

Iteration   2: 1983656423.085 ops/s
                 ·compiler.time.profiled: 3.000 ms
                 ·compiler.time.total:    6327.000 ms



Result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod":
  1964118459.467 ±(99.9%) 315303402.943 ops/s [Average]
  (min, avg, max) = (1924103165.336, 1964118459.467, 2024105569.065), stdev = 48793550.625
  CI (99.9%): [1648815056.524, 2279421862.411] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod:·compiler.time.profiled":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod:·compiler.time.total":
  6327.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5672.000, 5997.250, 6327.000), stdev = 375.584
  CI (99.9%): [6327.000, 6327.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue

# Run progress: 38.30% complete, ETA 00:13:59
# Fork: 1 of 2
# Warmup Iteration   1: 51133761.510 ops/s
# Warmup Iteration   2: 181122777.728 ops/s
# Warmup Iteration   3: 190319867.972 ops/s
Iteration   1: 180212448.385 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5820.000 ms

Iteration   2: 187083515.463 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6086.000 ms


# Run progress: 39.36% complete, ETA 00:13:45
# Fork: 2 of 2
# Warmup Iteration   1: 58588634.307 ops/s
# Warmup Iteration   2: 192186607.444 ops/s
# Warmup Iteration   3: 196355354.975 ops/s
Iteration   1: 199888519.436 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5925.000 ms

Iteration   2: 206939653.774 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5934.000 ms



Result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue":
  193531034.264 ±(99.9%) 78184189.174 ops/s [Average]
  (min, avg, max) = (180212448.385, 193531034.264, 206939653.774), stdev = 12099089.819
  CI (99.9%): [115346845.090, 271715223.439] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue:·compiler.time.total":
  6086.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5820.000, 5941.250, 6086.000), stdev = 109.500
  CI (99.9%): [6086.000, 6086.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue

# Run progress: 40.43% complete, ETA 00:13:30
# Fork: 1 of 2
# Warmup Iteration   1: 39330961.492 ops/s
# Warmup Iteration   2: 141919813.876 ops/s
# Warmup Iteration   3: 202123224.696 ops/s
Iteration   1: 204323810.382 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6363.000 ms

Iteration   2: 191852440.088 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6631.000 ms


# Run progress: 41.49% complete, ETA 00:13:15
# Fork: 2 of 2
# Warmup Iteration   1: 61584107.098 ops/s
# Warmup Iteration   2: 165007708.068 ops/s
# Warmup Iteration   3: 178548104.556 ops/s
Iteration   1: 186399267.593 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5659.000 ms

Iteration   2: 191843071.169 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5661.000 ms



Result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue":
  193604647.308 ±(99.9%) 49070194.892 ops/s [Average]
  (min, avg, max) = (186399267.593, 193604647.308, 204323810.382), stdev = 7593666.977
  CI (99.9%): [144534452.416, 242674842.200] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue:·compiler.time.total":
  6631.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5659.000, 6078.500, 6631.000), stdev = 495.474
  CI (99.9%): [6631.000, 6631.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_05_DummyInvokeState.baseline

# Run progress: 42.55% complete, ETA 00:13:01
# Fork: 1 of 2
# Warmup Iteration   1: 245041764.424 ops/s
# Warmup Iteration   2: 1153222926.931 ops/s
# Warmup Iteration   3: 1563268068.234 ops/s
Iteration   1: 1791894194.786 ops/s
                 ·compiler.time.profiled: 3.000 ms
                 ·compiler.time.total:    6552.000 ms

Iteration   2: 1897071373.449 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6843.000 ms


# Run progress: 43.62% complete, ETA 00:12:46
# Fork: 2 of 2
# Warmup Iteration   1: 235236989.801 ops/s
# Warmup Iteration   2: 1110445709.189 ops/s
# Warmup Iteration   3: 1843775025.837 ops/s
Iteration   1: 1795298803.016 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6736.000 ms

Iteration   2: 1780095077.837 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7086.000 ms



Result "org.sample.JMHBenchmark_05_DummyInvokeState.baseline":
  1816089862.272 ±(99.9%) 351398521.563 ops/s [Average]
  (min, avg, max) = (1780095077.837, 1816089862.272, 1897071373.449), stdev = 54379310.186
  CI (99.9%): [1464691340.709, 2167488383.835] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.baseline:·compiler.time.profiled":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.750, 3.000), stdev = 1.500
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.baseline:·compiler.time.total":
  7086.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6552.000, 6804.250, 7086.000), stdev = 222.989
  CI (99.9%): [7086.000, 7086.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS

# Run progress: 44.68% complete, ETA 00:12:31
# Fork: 1 of 2
# Warmup Iteration   1: 38138254.647 ops/s
# Warmup Iteration   2: 106630695.011 ops/s
# Warmup Iteration   3: 204544564.524 ops/s
Iteration   1: 168106302.607 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    7285.000 ms

Iteration   2: 195149425.039 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    7383.000 ms


# Run progress: 45.74% complete, ETA 00:12:17
# Fork: 2 of 2
# Warmup Iteration   1: 38134562.374 ops/s
# Warmup Iteration   2: 168660290.425 ops/s
# Warmup Iteration   3: 169779976.205 ops/s
Iteration   1: 187319012.652 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6337.000 ms

Iteration   2: 192587215.839 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6494.000 ms



Result "org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS":
  185790489.034 ±(99.9%) 79041868.250 ops/s [Average]
  (min, avg, max) = (168106302.607, 185790489.034, 195149425.039), stdev = 12231816.606
  CI (99.9%): [106748620.784, 264832357.284] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS:·compiler.time.profiled":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.750, 1.000), stdev = 0.500
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS:·compiler.time.total":
  7383.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6337.000, 6874.750, 7383.000), stdev = 535.652
  CI (99.9%): [7383.000, 7383.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS

# Run progress: 46.81% complete, ETA 00:12:03
# Fork: 1 of 2
# Warmup Iteration   1: 44068948.745 ops/s
# Warmup Iteration   2: 143397890.764 ops/s
# Warmup Iteration   3: 182090299.088 ops/s
Iteration   1: 189200667.320 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6724.000 ms

Iteration   2: 194035752.405 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6802.000 ms


# Run progress: 47.87% complete, ETA 00:11:49
# Fork: 2 of 2
# Warmup Iteration   1: 32132766.521 ops/s
# Warmup Iteration   2: 121969703.839 ops/s
# Warmup Iteration   3: 200429006.080 ops/s
Iteration   1: 211830302.181 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7317.000 ms

Iteration   2: 209314649.456 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    7323.000 ms



Result "org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS":
  201095342.840 ±(99.9%) 72162173.637 ops/s [Average]
  (min, avg, max) = (189200667.320, 201095342.840, 211830302.181), stdev = 11167176.249
  CI (99.9%): [128933169.203, 273257516.478] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS:·compiler.time.total":
  7323.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6724.000, 7041.500, 7323.000), stdev = 323.166
  CI (99.9%): [7323.000, 7323.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_05_DummyInvokeState.testInvocation

# Run progress: 48.94% complete, ETA 00:11:34
# Fork: 1 of 2
# Warmup Iteration   1: 501966768.417 ops/s
# Warmup Iteration   2: 1818050804.417 ops/s
# Warmup Iteration   3: 1989138950.735 ops/s
Iteration   1: 2017635898.173 ops/s
                 ·compiler.time.profiled: 105.000 ms
                 ·compiler.time.total:    5734.000 ms

Iteration   2: 2080477960.350 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5734.000 ms


# Run progress: 50.00% complete, ETA 00:11:20
# Fork: 2 of 2
# Warmup Iteration   1: 674231326.738 ops/s
# Warmup Iteration   2: 2000305703.914 ops/s
# Warmup Iteration   3: 1862348331.941 ops/s
Iteration   1: 2006266959.946 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5400.000 ms

Iteration   2: 1936447385.197 ops/s
                 ·compiler.time.profiled: 9.000 ms
                 ·compiler.time.total:    5572.000 ms



Result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocation":
  2010207050.917 ±(99.9%) 381370548.929 ops/s [Average]
  (min, avg, max) = (1936447385.197, 2010207050.917, 2080477960.350), stdev = 59017514.598
  CI (99.9%): [1628836501.988, 2391577599.846] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocation:·compiler.time.profiled":
  114.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 28.500, 105.000), stdev = 51.176
  CI (99.9%): [114.000, 114.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocation:·compiler.time.total":
  5734.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5400.000, 5610.000, 5734.000), stdev = 159.474
  CI (99.9%): [5734.000, 5734.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS

# Run progress: 51.06% complete, ETA 00:11:05
# Fork: 1 of 2
# Warmup Iteration   1: 61578444.098 ops/s
# Warmup Iteration   2: 177060789.337 ops/s
# Warmup Iteration   3: 188613634.769 ops/s
Iteration   1: 201420551.266 ops/s
                 ·compiler.time.profiled: 11.000 ms
                 ·compiler.time.total:    5871.000 ms

Iteration   2: 197395603.815 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5876.000 ms


# Run progress: 52.13% complete, ETA 00:10:51
# Fork: 2 of 2
# Warmup Iteration   1: 56522671.040 ops/s
# Warmup Iteration   2: 200927443.636 ops/s
# Warmup Iteration   3: 198282582.074 ops/s
Iteration   1: 193817311.385 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5793.000 ms

Iteration   2: 200863383.778 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5858.000 ms



Result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS":
  198374212.561 ±(99.9%) 22754760.557 ops/s [Average]
  (min, avg, max) = (193817311.385, 198374212.561, 201420551.266), stdev = 3521324.384
  CI (99.9%): [175619452.004, 221128973.118] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS:·compiler.time.profiled":
  11.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 2.750, 11.000), stdev = 5.500
  CI (99.9%): [11.000, 11.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS:·compiler.time.total":
  5876.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5793.000, 5849.500, 5876.000), stdev = 38.423
  CI (99.9%): [5876.000, 5876.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS

# Run progress: 53.19% complete, ETA 00:10:37
# Fork: 1 of 2
# Warmup Iteration   1: 35701395.907 ops/s
# Warmup Iteration   2: 168319928.533 ops/s
# Warmup Iteration   3: 201001606.689 ops/s
Iteration   1: 199907010.490 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6424.000 ms

Iteration   2: 184419133.647 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6426.000 ms


# Run progress: 54.26% complete, ETA 00:10:23
# Fork: 2 of 2
# Warmup Iteration   1: 29848900.685 ops/s
# Warmup Iteration   2: 126728482.353 ops/s
# Warmup Iteration   3: 188841448.220 ops/s
Iteration   1: 187854993.486 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6904.000 ms

Iteration   2: 188496249.947 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7488.000 ms



Result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS":
  190169346.892 ±(99.9%) 43515397.804 ops/s [Average]
  (min, avg, max) = (184419133.647, 190169346.892, 199907010.490), stdev = 6734055.979
  CI (99.9%): [146653949.089, 233684744.696] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS:·compiler.time.total":
  7488.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6424.000, 6810.500, 7488.000), stdev = 504.966
  CI (99.9%): [7488.000, 7488.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke

# Run progress: 55.32% complete, ETA 00:10:08
# Fork: 1 of 2
# Warmup Iteration   1: 459918.978 ops/s
# Warmup Iteration   2: 1151190.819 ops/s
# Warmup Iteration   3: 1884357.467 ops/s
Iteration   1: 1927173.856 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7414.000 ms

Iteration   2: 1938706.544 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7600.000 ms


# Run progress: 56.38% complete, ETA 00:09:54
# Fork: 2 of 2
# Warmup Iteration   1: 471263.489 ops/s
# Warmup Iteration   2: 1386856.595 ops/s
# Warmup Iteration   3: 1942243.934 ops/s
Iteration   1: 1934841.571 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7325.000 ms

Iteration   2: 1890674.536 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7326.000 ms



Result "org.sample.JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke":
  1922849.127 ±(99.9%) 142025.840 ops/s [Average]
  (min, avg, max) = (1890674.536, 1922849.127, 1938706.544), stdev = 21978.656
  CI (99.9%): [1780823.287, 2064874.967] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke:·compiler.time.total":
  7600.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (7325.000, 7416.250, 7600.000), stdev = 129.410
  CI (99.9%): [7600.000, 7600.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_06_SumCalcInvoke.baseline

# Run progress: 57.45% complete, ETA 00:09:40
# Fork: 1 of 2
# Warmup Iteration   1: 165046010.051 ops/s
# Warmup Iteration   2: 899961352.468 ops/s
# Warmup Iteration   3: 1691388098.140 ops/s
Iteration   1: 1815203150.300 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7448.000 ms

Iteration   2: 1700299228.129 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7451.000 ms


# Run progress: 58.51% complete, ETA 00:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 200259775.637 ops/s
# Warmup Iteration   2: 1516777684.257 ops/s
# Warmup Iteration   3: 1638249340.311 ops/s
Iteration   1: 1911043711.047 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6214.000 ms

Iteration   2: 1907662773.083 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6215.000 ms



Result "org.sample.JMHBenchmark_06_SumCalcInvoke.baseline":
  1833552215.640 ±(99.9%) 641771881.276 ops/s [Average]
  (min, avg, max) = (1700299228.129, 1833552215.640, 1911043711.047), stdev = 99314909.026
  CI (99.9%): [1191780334.364, 2475324096.915] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_06_SumCalcInvoke.baseline:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_06_SumCalcInvoke.baseline:·compiler.time.total":
  7451.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6214.000, 6832.000, 7451.000), stdev = 713.029
  CI (99.9%): [7451.000, 7451.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc

# Run progress: 59.57% complete, ETA 00:09:11
# Fork: 1 of 2
# Warmup Iteration   1: 492985.102 ops/s
# Warmup Iteration   2: 1293810.832 ops/s
# Warmup Iteration   3: 2115863.230 ops/s
Iteration   1: 1974772.892 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6739.000 ms

Iteration   2: 2130245.408 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6933.000 ms


# Run progress: 60.64% complete, ETA 00:08:56
# Fork: 2 of 2
# Warmup Iteration   1: 567880.837 ops/s
# Warmup Iteration   2: 1391348.888 ops/s
# Warmup Iteration   3: 2175131.848 ops/s
Iteration   1: 2014915.807 ops/s
                 ·compiler.time.profiled: 4.000 ms
                 ·compiler.time.total:    6581.000 ms

Iteration   2: 2029957.997 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6690.000 ms



Result "org.sample.JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc":
  2037473.026 ±(99.9%) 427067.354 ops/s [Average]
  (min, avg, max) = (1974772.892, 2037473.026, 2130245.408), stdev = 66089.146
  CI (99.9%): [1610405.673, 2464540.380] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc:·compiler.time.profiled":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.250, 4.000), stdev = 1.893
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc:·compiler.time.total":
  6933.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6581.000, 6735.750, 6933.000), stdev = 147.149
  CI (99.9%): [6933.000, 6933.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline

# Run progress: 61.70% complete, ETA 00:08:41
# Fork: 1 of 2
# Warmup Iteration   1: 482377.690 ops/s
# Warmup Iteration   2: 1610913.662 ops/s
# Warmup Iteration   3: 2070044.581 ops/s
Iteration   1: 1910456.946 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6183.000 ms

Iteration   2: 1949110.833 ops/s
                 ·compiler.time.profiled: 145.000 ms
                 ·compiler.time.total:    6328.000 ms


# Run progress: 62.77% complete, ETA 00:08:27
# Fork: 2 of 2
# Warmup Iteration   1: 441378.189 ops/s
# Warmup Iteration   2: 1572885.075 ops/s
# Warmup Iteration   3: 1865323.636 ops/s
Iteration   1: 2027245.248 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6364.000 ms

Iteration   2: 1988733.711 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6396.000 ms



Result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline":
  1968886.685 ±(99.9%) 325347.848 ops/s [Average]
  (min, avg, max) = (1910456.946, 1968886.685, 2027245.248), stdev = 50347.940
  CI (99.9%): [1643538.836, 2294234.533] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.profiled":
  145.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 36.250, 145.000), stdev = 72.500
  CI (99.9%): [145.000, 145.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.total":
  6396.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6183.000, 6317.750, 6396.000), stdev = 94.030
  CI (99.9%): [6396.000, 6396.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline

# Run progress: 63.83% complete, ETA 00:08:12
# Fork: 1 of 2
# Warmup Iteration   1: 520991.111 ops/s
# Warmup Iteration   2: 1124799.772 ops/s
# Warmup Iteration   3: 1939041.491 ops/s
Iteration   1: 2002441.558 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7124.000 ms

Iteration   2: 2060294.986 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7197.000 ms


# Run progress: 64.89% complete, ETA 00:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 470038.379 ops/s
# Warmup Iteration   2: 1254765.964 ops/s
# Warmup Iteration   3: 1947421.423 ops/s
Iteration   1: 2043241.358 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6951.000 ms

Iteration   2: 1934883.895 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7023.000 ms



Result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline":
  2010215.449 ±(99.9%) 360444.395 ops/s [Average]
  (min, avg, max) = (1934883.895, 2010215.449, 2060294.986), stdev = 55779.169
  CI (99.9%): [1649771.054, 2370659.844] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline:·compiler.time.total":
  7197.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6951.000, 7073.750, 7197.000), stdev = 108.564
  CI (99.9%): [7197.000, 7197.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_07_SumCalcWithCompileHint.baseline

# Run progress: 65.96% complete, ETA 00:07:43
# Fork: 1 of 2
# Warmup Iteration   1: 202586821.674 ops/s
# Warmup Iteration   2: 1100211794.128 ops/s
# Warmup Iteration   3: 1777595902.223 ops/s
Iteration   1: 1796721601.237 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7016.000 ms

Iteration   2: 1668892741.144 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    7017.000 ms


# Run progress: 67.02% complete, ETA 00:07:28
# Fork: 2 of 2
# Warmup Iteration   1: 143799397.103 ops/s
# Warmup Iteration   2: 690943924.172 ops/s
# Warmup Iteration   3: 1767596881.608 ops/s
Iteration   1: 1748497443.999 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    8199.000 ms

Iteration   2: 1524191012.921 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    8201.000 ms



Result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.baseline":
  1684575699.825 ±(99.9%) 770323115.426 ops/s [Average]
  (min, avg, max) = (1524191012.921, 1684575699.825, 1796721601.237), stdev = 119208354.808
  CI (99.9%): [914252584.399, 2454898815.251] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.baseline:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.baseline:·compiler.time.total":
  8201.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (7016.000, 7608.250, 8201.000), stdev = 683.295
  CI (99.9%): [8201.000, 8201.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc

# Run progress: 68.09% complete, ETA 00:07:14
# Fork: 1 of 2
# Warmup Iteration   1: 561115.507 ops/s
# Warmup Iteration   2: 1470606.283 ops/s
# Warmup Iteration   3: 2141644.729 ops/s
Iteration   1: 2174199.047 ops/s
                 ·compiler.time.profiled: 2.000 ms
                 ·compiler.time.total:    6597.000 ms

Iteration   2: 2212243.246 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6780.000 ms


# Run progress: 69.15% complete, ETA 00:06:59
# Fork: 2 of 2
# Warmup Iteration   1: 633058.753 ops/s
# Warmup Iteration   2: 1875903.466 ops/s
# Warmup Iteration   3: 2178716.105 ops/s
Iteration   1: 2142621.193 ops/s
                 ·compiler.time.profiled: 76.000 ms
                 ·compiler.time.total:    6012.000 ms

Iteration   2: 2186408.338 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6015.000 ms



Result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc":
  2178867.956 ±(99.9%) 186779.959 ops/s [Average]
  (min, avg, max) = (2142621.193, 2178867.956, 2212243.246), stdev = 28904.405
  CI (99.9%): [1992087.998, 2365647.915] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc:·compiler.time.profiled":
  80.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 20.000, 76.000), stdev = 37.336
  CI (99.9%): [80.000, 80.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc:·compiler.time.total":
  6780.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6012.000, 6351.000, 6780.000), stdev = 396.810
  CI (99.9%): [6780.000, 6780.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_08_NumberOfSumCalc.baseline

# Run progress: 70.21% complete, ETA 00:06:45
# Fork: 1 of 2
# Warmup Iteration   1: 341107307.694 ops/s
# Warmup Iteration   2: 1860798809.156 ops/s
# Warmup Iteration   3: 2010840846.974 ops/s
Iteration   1: 1953208982.941 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5544.000 ms

Iteration   2: 2009185796.448 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5589.000 ms


# Run progress: 71.28% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 432118203.626 ops/s
# Warmup Iteration   2: 1940435214.950 ops/s
# Warmup Iteration   3: 2010852633.912 ops/s
Iteration   1: 2004513207.776 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5443.000 ms

Iteration   2: 2004065018.224 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5537.000 ms



Result "org.sample.JMHBenchmark_08_NumberOfSumCalc.baseline":
  1992743251.347 ±(99.9%) 170969386.167 ops/s [Average]
  (min, avg, max) = (1953208982.941, 1992743251.347, 2009185796.448), stdev = 26457701.761
  CI (99.9%): [1821773865.181, 2163712637.514] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.baseline:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.baseline:·compiler.time.total":
  5589.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5443.000, 5528.250, 5589.000), stdev = 61.326
  CI (99.9%): [5589.000, 5589.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke

# Run progress: 72.34% complete, ETA 00:06:16
# Fork: 1 of 2
# Warmup Iteration   1: 237079.902 ops/s
# Warmup Iteration   2: 683255.252 ops/s
# Warmup Iteration   3: 756888.148 ops/s
Iteration   1: 745386.589 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5772.000 ms

Iteration   2: 737801.271 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5841.000 ms


# Run progress: 73.40% complete, ETA 00:06:01
# Fork: 2 of 2
# Warmup Iteration   1: 232403.714 ops/s
# Warmup Iteration   2: 672813.298 ops/s
# Warmup Iteration   3: 725800.410 ops/s
Iteration   1: 747693.404 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5874.000 ms

Iteration   2: 751161.916 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5876.000 ms



Result "org.sample.JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke":
  745510.795 ±(99.9%) 36583.293 ops/s [Average]
  (min, avg, max) = (737801.271, 745510.795, 751161.916), stdev = 5661.305
  CI (99.9%): [708927.502, 782094.088] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke:·compiler.time.total":
  5876.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5772.000, 5840.750, 5876.000), stdev = 48.562
  CI (99.9%): [5876.000, 5876.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc

# Run progress: 74.47% complete, ETA 00:05:47
# Fork: 1 of 2
# Warmup Iteration   1: 228405.440 ops/s
# Warmup Iteration   2: 641339.063 ops/s
# Warmup Iteration   3: 729680.624 ops/s
Iteration   1: 745508.753 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6037.000 ms

Iteration   2: 749581.028 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6114.000 ms


# Run progress: 75.53% complete, ETA 00:05:33
# Fork: 2 of 2
# Warmup Iteration   1: 233318.180 ops/s
# Warmup Iteration   2: 703950.496 ops/s
# Warmup Iteration   3: 719915.809 ops/s
Iteration   1: 746485.254 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5881.000 ms

Iteration   2: 755204.077 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5882.000 ms



Result "org.sample.JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc":
  749194.778 ±(99.9%) 28213.857 ops/s [Average]
  (min, avg, max) = (745508.753, 749194.778, 755204.077), stdev = 4366.126
  CI (99.9%): [720980.921, 777408.635] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc:·compiler.time.profiled":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.500, 1.000), stdev = 0.577
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc:·compiler.time.total":
  6114.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5881.000, 5978.500, 6114.000), stdev = 116.334
  CI (99.9%): [6114.000, 6114.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke

# Run progress: 76.60% complete, ETA 00:05:18
# Fork: 1 of 2
# Warmup Iteration   1: 228258.841 ops/s
# Warmup Iteration   2: 545651.966 ops/s
# Warmup Iteration   3: 659371.271 ops/s
Iteration   1: 650276.153 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6557.000 ms

Iteration   2: 605877.326 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6564.000 ms


# Run progress: 77.66% complete, ETA 00:05:04
# Fork: 2 of 2
# Warmup Iteration   1: 183685.285 ops/s
# Warmup Iteration   2: 225373.150 ops/s
# Warmup Iteration   3: 655258.072 ops/s
Iteration   1: 644991.895 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    8483.000 ms

Iteration   2: 656364.699 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    8770.000 ms



Result "org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke":
  639377.518 ±(99.9%) 147409.324 ops/s [Average]
  (min, avg, max) = (605877.326, 639377.518, 656364.699), stdev = 22811.756
  CI (99.9%): [491968.194, 786786.843] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke:·compiler.time.total":
  8770.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6557.000, 7593.500, 8770.000), stdev = 1198.550
  CI (99.9%): [8770.000, 8770.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested

# Run progress: 78.72% complete, ETA 00:04:49
# Fork: 1 of 2
# Warmup Iteration   1: 181009.337 ops/s
# Warmup Iteration   2: 230220.712 ops/s
# Warmup Iteration   3: 654230.665 ops/s
Iteration   1: 721482.011 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    8438.000 ms

Iteration   2: 712222.595 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    8439.000 ms


# Run progress: 79.79% complete, ETA 00:04:35
# Fork: 2 of 2
# Warmup Iteration   1: 236959.063 ops/s
# Warmup Iteration   2: 702219.542 ops/s
# Warmup Iteration   3: 756733.924 ops/s
Iteration   1: 769679.360 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5786.000 ms

Iteration   2: 751892.302 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5985.000 ms



Result "org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested":
  738819.067 ±(99.9%) 172234.058 ops/s [Average]
  (min, avg, max) = (712222.595, 738819.067, 769679.360), stdev = 26653.411
  CI (99.9%): [566585.009, 911053.125] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested:·compiler.time.total":
  8439.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5786.000, 7162.000, 8439.000), stdev = 1476.212
  CI (99.9%): [8439.000, 8439.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline

# Run progress: 80.85% complete, ETA 00:04:20
# Fork: 1 of 2
# Warmup Iteration   1: 93522.850 ops/s
# Warmup Iteration   2: 306533.481 ops/s
# Warmup Iteration   3: 320324.171 ops/s
Iteration   1: 314506.696 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5705.000 ms

Iteration   2: 317602.058 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5706.000 ms


# Run progress: 81.91% complete, ETA 00:04:06
# Fork: 2 of 2
# Warmup Iteration   1: 93885.829 ops/s
# Warmup Iteration   2: 301439.994 ops/s
# Warmup Iteration   3: 302967.834 ops/s
Iteration   1: 292050.077 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5519.000 ms

Iteration   2: 302785.942 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5525.000 ms



Result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline":
  306736.193 ±(99.9%) 75519.087 ops/s [Average]
  (min, avg, max) = (292050.077, 306736.193, 317602.058), stdev = 11686.662
  CI (99.9%): [231217.107, 382255.280] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.total":
  5706.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5519.000, 5613.750, 5706.000), stdev = 105.973
  CI (99.9%): [5706.000, 5706.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline

# Run progress: 82.98% complete, ETA 00:03:51
# Fork: 1 of 2
# Warmup Iteration   1: 115140.154 ops/s
# Warmup Iteration   2: 296148.391 ops/s
# Warmup Iteration   3: 356484.613 ops/s
Iteration   1: 360918.191 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6359.000 ms

Iteration   2: 352977.632 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6359.000 ms


# Run progress: 84.04% complete, ETA 00:03:37
# Fork: 2 of 2
# Warmup Iteration   1: 100845.947 ops/s
# Warmup Iteration   2: 133405.078 ops/s
# Warmup Iteration   3: 317625.675 ops/s
Iteration   1: 342026.406 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7846.000 ms

Iteration   2: 373701.448 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    7850.000 ms



Result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline":
  357405.919 ±(99.9%) 86215.263 ops/s [Average]
  (min, avg, max) = (342026.406, 357405.919, 373701.448), stdev = 13341.907
  CI (99.9%): [271190.656, 443621.182] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline:·compiler.time.total":
  7850.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6359.000, 7103.500, 7850.000), stdev = 859.676
  CI (99.9%): [7850.000, 7850.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline

# Run progress: 85.11% complete, ETA 00:03:22
# Fork: 1 of 2
# Warmup Iteration   1: 461386184.095 ops/s
# Warmup Iteration   2: 1787730409.959 ops/s
# Warmup Iteration   3: 1931450024.629 ops/s
Iteration   1: 1921519719.728 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6242.000 ms

Iteration   2: 1967161165.409 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6243.000 ms


# Run progress: 86.17% complete, ETA 00:03:08
# Fork: 2 of 2
# Warmup Iteration   1: 554327332.344 ops/s
# Warmup Iteration   2: 1942105041.277 ops/s
# Warmup Iteration   3: 1999275407.251 ops/s
Iteration   1: 1943759094.387 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5462.000 ms

Iteration   2: 1910004071.077 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5715.000 ms



Result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline":
  1935611012.650 ±(99.9%) 163310011.355 ops/s [Average]
  (min, avg, max) = (1910004071.077, 1935611012.650, 1967161165.409), stdev = 25272405.030
  CI (99.9%): [1772301001.295, 2098921024.005] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline:·compiler.time.total":
  6243.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5462.000, 5915.500, 6243.000), stdev = 391.459
  CI (99.9%): [6243.000, 6243.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_10_longSumCalc.baseline

# Run progress: 87.23% complete, ETA 00:02:53
# Fork: 1 of 2
# Warmup Iteration   1: 469937941.350 ops/s
# Warmup Iteration   2: 1827486768.485 ops/s
# Warmup Iteration   3: 1931578244.049 ops/s
Iteration   1: 1950106248.576 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5893.000 ms

Iteration   2: 1911860049.782 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5965.000 ms


# Run progress: 88.30% complete, ETA 00:02:39
# Fork: 2 of 2
# Warmup Iteration   1: 280110311.848 ops/s
# Warmup Iteration   2: 1346117418.040 ops/s
# Warmup Iteration   3: 1986534780.226 ops/s
Iteration   1: 1904031099.561 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6387.000 ms

Iteration   2: 1997788426.653 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    6526.000 ms



Result "org.sample.JMHBenchmark_10_longSumCalc.baseline":
  1940946456.143 ±(99.9%) 277280691.118 ops/s [Average]
  (min, avg, max) = (1904031099.561, 1940946456.143, 1997788426.653), stdev = 42909493.881
  CI (99.9%): [1663665765.025, 2218227147.261] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_10_longSumCalc.baseline:·compiler.time.profiled":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_10_longSumCalc.baseline:·compiler.time.total":
  6526.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5893.000, 6192.750, 6526.000), stdev = 311.185
  CI (99.9%): [6526.000, 6526.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_10_longSumCalc.longSumCalc

# Run progress: 89.36% complete, ETA 00:02:24
# Fork: 1 of 2
# Warmup Iteration   1: 40341.386 ops/s
# Warmup Iteration   2: 113399.035 ops/s
# Warmup Iteration   3: 118678.332 ops/s
Iteration   1: 123252.610 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6189.000 ms

Iteration   2: 120076.054 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6229.000 ms


# Run progress: 90.43% complete, ETA 00:02:10
# Fork: 2 of 2
# Warmup Iteration   1: 37656.153 ops/s
# Warmup Iteration   2: 94498.912 ops/s
# Warmup Iteration   3: 109241.728 ops/s
Iteration   1: 120987.334 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6886.000 ms

Iteration   2: 129649.187 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    7041.000 ms



Result "org.sample.JMHBenchmark_10_longSumCalc.longSumCalc":
  123491.296 ±(99.9%) 27896.616 ops/s [Average]
  (min, avg, max) = (120076.054, 123491.296, 129649.187), stdev = 4317.032
  CI (99.9%): [95594.680, 151387.912] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_10_longSumCalc.longSumCalc:·compiler.time.profiled":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.250, 1.000), stdev = 0.500
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_10_longSumCalc.longSumCalc:·compiler.time.total":
  7041.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6189.000, 6586.250, 7041.000), stdev = 440.486
  CI (99.9%): [7041.000, 7041.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc

# Run progress: 91.49% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 32534.560 ops/s
# Warmup Iteration   2: 95964.536 ops/s
# Warmup Iteration   3: 108200.014 ops/s
Iteration   1: 105589.084 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6147.000 ms

Iteration   2: 110560.782 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6226.000 ms


# Run progress: 92.55% complete, ETA 00:01:41
# Fork: 2 of 2
# Warmup Iteration   1: 32165.677 ops/s
# Warmup Iteration   2: 97524.932 ops/s
# Warmup Iteration   3: 80686.072 ops/s
Iteration   1: 101252.249 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6361.000 ms

Iteration   2: 109625.397 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    6369.000 ms



Result "org.sample.JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc":
  106756.878 ±(99.9%) 27507.836 ops/s [Average]
  (min, avg, max) = (101252.249, 106756.878, 110560.782), stdev = 4256.868
  CI (99.9%): [79249.042, 134264.714] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc:·compiler.time.profiled":
  ≈ 0 ms

Secondary result "org.sample.JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc:·compiler.time.total":
  6369.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (6147.000, 6275.750, 6369.000), stdev = 108.035
  CI (99.9%): [6369.000, 6369.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline

# Run progress: 93.62% complete, ETA 00:01:27
# Fork: 1 of 2
# Warmup Iteration   1: 350965621.010 ops/s
# Warmup Iteration   2: 1719072139.099 ops/s
# Warmup Iteration   3: 2101960302.500 ops/s
Iteration   1: 2106640407.554 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5667.000 ms

Iteration   2: 2066296542.266 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5951.000 ms


# Run progress: 94.68% complete, ETA 00:01:12
# Fork: 2 of 2
# Warmup Iteration   1: 407610490.506 ops/s
# Warmup Iteration   2: 2023471447.528 ops/s
# Warmup Iteration   3: 2076349810.828 ops/s
Iteration   1: 2026256017.472 ops/s
                 ·compiler.time.profiled: 78.000 ms
                 ·compiler.time.total:    5335.000 ms

Iteration   2: 2083351859.197 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5388.000 ms



Result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline":
  2070636206.622 ±(99.9%) 219023125.839 ops/s [Average]
  (min, avg, max) = (2026256017.472, 2070636206.622, 2106640407.554), stdev = 33894071.167
  CI (99.9%): [1851613080.783, 2289659332.461] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline:·compiler.time.profiled":
  79.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 19.750, 78.000), stdev = 38.836
  CI (99.9%): [79.000, 79.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline:·compiler.time.total":
  5951.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5335.000, 5585.250, 5951.000), stdev = 284.012
  CI (99.9%): [5951.000, 5951.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline

# Run progress: 95.74% complete, ETA 00:00:57
# Fork: 1 of 2
# Warmup Iteration   1: 9965.136 ops/s
# Warmup Iteration   2: 31152.190 ops/s
# Warmup Iteration   3: 29840.102 ops/s
Iteration   1: 31213.647 ops/s
                 ·compiler.time.profiled: 3.000 ms
                 ·compiler.time.total:    5261.000 ms

Iteration   2: 30896.310 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5306.000 ms


# Run progress: 96.81% complete, ETA 00:00:43
# Fork: 2 of 2
# Warmup Iteration   1: 9644.009 ops/s
# Warmup Iteration   2: 31176.838 ops/s
# Warmup Iteration   3: 29228.007 ops/s
Iteration   1: 31318.774 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5187.000 ms

Iteration   2: 31373.262 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5365.000 ms



Result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline":
  31200.498 ±(99.9%) 1378.591 ops/s [Average]
  (min, avg, max) = (30896.310, 31200.498, 31373.262), stdev = 213.339
  CI (99.9%): [29821.907, 32579.089] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline:·compiler.time.profiled":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.250, 3.000), stdev = 1.258
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline:·compiler.time.total":
  5365.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5187.000, 5279.750, 5365.000), stdev = 75.079
  CI (99.9%): [5365.000, 5365.000] (assumes normal distribution)


# JMH version: 1.25.2
# VM version: JDK 11.0.8, OpenJDK 64-Bit Server VM, 11.0.8+10-LTS
# VM invoker: /usr/lib/jvm/bellsoft-java11-amd64/bin/java
# VM options: -XX:+Inline -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 3 iterations, 2 s each
# Measurement: 2 iterations, 2 s each
# Timeout: 1 s per iteration, ***WARNING: The timeout might be too low!***
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline

# Run progress: 97.87% complete, ETA 00:00:28
# Fork: 1 of 2
# Warmup Iteration   1: 10313.877 ops/s
# Warmup Iteration   2: 34070.854 ops/s
# Warmup Iteration   3: 30744.006 ops/s
Iteration   1: 33907.830 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5643.000 ms

Iteration   2: 34139.311 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5742.000 ms


# Run progress: 98.94% complete, ETA 00:00:14
# Fork: 2 of 2
# Warmup Iteration   1: 10281.721 ops/s
# Warmup Iteration   2: 33717.982 ops/s
# Warmup Iteration   3: 30860.326 ops/s
Iteration   1: 34152.752 ops/s
                 ·compiler.time.profiled: ≈ 0 ms
                 ·compiler.time.total:    5621.000 ms

Iteration   2: 34170.670 ops/s
                 ·compiler.time.profiled: 1.000 ms
                 ·compiler.time.total:    5689.000 ms



Result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline":
  34092.641 ±(99.9%) 800.479 ops/s [Average]
  (min, avg, max) = (33907.830, 34092.641, 34170.670), stdev = 123.875
  CI (99.9%): [33292.161, 34893.120] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline:·compiler.time.profiled":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.750, 1.000), stdev = 0.500
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "org.sample.JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline:·compiler.time.total":
  5742.000 ±(99.9%) 0.001 ms [Maximum]
  (min, avg, max) = (5621.000, 5673.750, 5742.000), stdev = 53.600
  CI (99.9%): [5742.000, 5742.000] (assumes normal distribution)


# Run complete. Total time: 00:22:41

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                                                       Mode  Cnt           Score           Error  Units
JMHBenchmark_01_DummyInvoke.baseline                                                                                           thrpt    4  2006186965.410 ± 603829762.557  ops/s
JMHBenchmark_01_DummyInvoke.baseline:·compiler.time.profiled                                                                   thrpt    4         265.000                     ms
JMHBenchmark_01_DummyInvoke.baseline:·compiler.time.total                                                                      thrpt    4        8338.000                     ms
JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod                                                                          thrpt    4  1997864217.120 ± 176674686.071  ops/s
JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod:·compiler.time.profiled                                                  thrpt    4           3.000                     ms
JMHBenchmark_01_DummyInvoke.testInvocationDummyMethod:·compiler.time.total                                                     thrpt    4        5800.000                     ms
JMHBenchmark_02_InvokeWithReturn.baseline                                                                                      thrpt    4  2025717694.195 ±  63803543.297  ops/s
JMHBenchmark_02_InvokeWithReturn.baseline:·compiler.time.profiled                                                              thrpt    4           2.000                     ms
JMHBenchmark_02_InvokeWithReturn.baseline:·compiler.time.total                                                                 thrpt    4        5748.000                     ms
JMHBenchmark_02_InvokeWithReturn.noInvocation                                                                                  thrpt    4   209874888.940 ±  15551351.462  ops/s
JMHBenchmark_02_InvokeWithReturn.noInvocation:·compiler.time.profiled                                                          thrpt    4           2.000                     ms
JMHBenchmark_02_InvokeWithReturn.noInvocation:·compiler.time.total                                                             thrpt    4        5794.000                     ms
JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh                                                               thrpt    4   162988266.299 ± 206490826.934  ops/s
JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh:·compiler.time.profiled                                       thrpt    4           1.000                     ms
JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithBh:·compiler.time.total                                          thrpt    4        7612.000                     ms
JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue                                                      thrpt    4   180495384.962 ± 267175333.660  ops/s
JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue:·compiler.time.profiled                              thrpt    4             ≈ 0                     ms
JMHBenchmark_02_InvokeWithReturn.testInvocationDummyMethodWithReturnValue:·compiler.time.total                                 thrpt    4       11167.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.baseline                                                                            thrpt    4  2074339520.038 ± 349231135.584  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.baseline:·compiler.time.profiled                                                    thrpt    4           1.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.baseline:·compiler.time.total                                                       thrpt    4        5490.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue                                                         thrpt    4   214594001.710 ±  32067034.393  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue:·compiler.time.profiled                                 thrpt    4         205.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.noInvocationWithReturnValue:·compiler.time.total                                    thrpt    4        5584.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline                                         thrpt    4   386362126.652 ±  13589656.128  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline:·compiler.time.profiled                 thrpt    4          17.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInline:·compiler.time.total                    thrpt    4        5213.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh                                       thrpt    4   115685999.331 ±   1221624.771  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh:·compiler.time.profiled               thrpt    4           5.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintDontInlineBh:·compiler.time.total                  thrpt    4        5501.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline                                             thrpt    4  2093406440.908 ±  87254469.801  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline:·compiler.time.profiled                     thrpt    4           1.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInline:·compiler.time.total                        thrpt    4        5133.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh                                           thrpt    4   216571384.128 ±   8310809.659  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh:·compiler.time.profiled                   thrpt    4           9.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithHintInlineBh:·compiler.time.total                      thrpt    4        5182.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline                          thrpt    4   115703503.977 ±   3031662.379  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline:·compiler.time.profiled  thrpt    4             ≈ 0                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintDontInline:·compiler.time.total     thrpt    4        5187.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline                              thrpt    4   208564252.636 ±  58952266.070  ops/s
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline:·compiler.time.profiled      thrpt    4          43.000                     ms
JMHBenchmark_03_DummyInvokeWithCompileHint.testInvocationDummyMethodWithReturnValueWithHintInline:·compiler.time.total         thrpt    4        5155.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.baseline                                                                                  thrpt    4  1840855150.260 ± 974818089.363  ops/s
JMHBenchmark_04_DummyInvokeWithValue.baseline:·compiler.time.profiled                                                          thrpt    4           2.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.baseline:·compiler.time.total                                                             thrpt    4        6356.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue                                                                   thrpt    4   186642498.143 ±  93146151.097  ops/s
JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue:·compiler.time.profiled                                           thrpt    4             ≈ 0                     ms
JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnValue:·compiler.time.total                                              thrpt    4        6893.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue                                                           thrpt    4   181823292.980 ±  75188346.722  ops/s
JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue:·compiler.time.profiled                                   thrpt    4         172.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.noInvocationReturnVolatileValue:·compiler.time.total                                      thrpt    4        6835.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod                                                                 thrpt    4  1964118459.467 ± 315303402.943  ops/s
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod:·compiler.time.profiled                                         thrpt    4           4.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethod:·compiler.time.total                                            thrpt    4        6327.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue                                                  thrpt    4   193531034.264 ±  78184189.174  ops/s
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue:·compiler.time.profiled                          thrpt    4           2.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnValue:·compiler.time.total                             thrpt    4        6086.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue                                          thrpt    4   193604647.308 ±  49070194.892  ops/s
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue:·compiler.time.profiled                  thrpt    4           1.000                     ms
JMHBenchmark_04_DummyInvokeWithValue.testInvocationDummyMethodWithReturnVolatileValue:·compiler.time.total                     thrpt    4        6631.000                     ms
JMHBenchmark_05_DummyInvokeState.baseline                                                                                      thrpt    4  1816089862.272 ± 351398521.563  ops/s
JMHBenchmark_05_DummyInvokeState.baseline:·compiler.time.profiled                                                              thrpt    4           3.000                     ms
JMHBenchmark_05_DummyInvokeState.baseline:·compiler.time.total                                                                 thrpt    4        7086.000                     ms
JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS                                                                     thrpt    4   185790489.034 ±  79041868.250  ops/s
JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS:·compiler.time.profiled                                             thrpt    4           3.000                     ms
JMHBenchmark_05_DummyInvokeState.noInvocationReturnValueBS:·compiler.time.total                                                thrpt    4        7383.000                     ms
JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS                                                                 thrpt    4   201095342.840 ±  72162173.637  ops/s
JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS:·compiler.time.profiled                                         thrpt    4           2.000                     ms
JMHBenchmark_05_DummyInvokeState.noInvocationlineReturnValueTS:·compiler.time.total                                            thrpt    4        7323.000                     ms
JMHBenchmark_05_DummyInvokeState.testInvocation                                                                                thrpt    4  2010207050.917 ± 381370548.929  ops/s
JMHBenchmark_05_DummyInvokeState.testInvocation:·compiler.time.profiled                                                        thrpt    4         114.000                     ms
JMHBenchmark_05_DummyInvokeState.testInvocation:·compiler.time.total                                                           thrpt    4        5734.000                     ms
JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS                                                                   thrpt    4   198374212.561 ±  22754760.557  ops/s
JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS:·compiler.time.profiled                                           thrpt    4          11.000                     ms
JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueBS:·compiler.time.total                                              thrpt    4        5876.000                     ms
JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS                                                                   thrpt    4   190169346.892 ±  43515397.804  ops/s
JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS:·compiler.time.profiled                                           thrpt    4           1.000                     ms
JMHBenchmark_05_DummyInvokeState.testInvocationReturnValueTS:·compiler.time.total                                              thrpt    4        7488.000                     ms
JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke                                                                                    thrpt    4     1922849.127 ±    142025.840  ops/s
JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke:·compiler.time.profiled                                                            thrpt    4             ≈ 0                     ms
JMHBenchmark_06_SumCalcInvoke.SumCalcInvoke:·compiler.time.total                                                               thrpt    4        7600.000                     ms
JMHBenchmark_06_SumCalcInvoke.baseline                                                                                         thrpt    4  1833552215.640 ± 641771881.276  ops/s
JMHBenchmark_06_SumCalcInvoke.baseline:·compiler.time.profiled                                                                 thrpt    4             ≈ 0                     ms
JMHBenchmark_06_SumCalcInvoke.baseline:·compiler.time.total                                                                    thrpt    4        7451.000                     ms
JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc                                                                              thrpt    4     2037473.026 ±    427067.354  ops/s
JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc:·compiler.time.profiled                                                      thrpt    4           5.000                     ms
JMHBenchmark_06_SumCalcInvoke.noInvocationSumCalc:·compiler.time.total                                                         thrpt    4        6933.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline                                                                   thrpt    4     1968886.685 ±    325347.848  ops/s
JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.profiled                                           thrpt    4         145.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.total                                              thrpt    4        6396.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline                                                                       thrpt    4     2010215.449 ±    360444.395  ops/s
JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline:·compiler.time.profiled                                               thrpt    4             ≈ 0                     ms
JMHBenchmark_07_SumCalcWithCompileHint.SumCalcWithInline:·compiler.time.total                                                  thrpt    4        7197.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.baseline                                                                                thrpt    4  1684575699.825 ± 770323115.426  ops/s
JMHBenchmark_07_SumCalcWithCompileHint.baseline:·compiler.time.profiled                                                        thrpt    4           2.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.baseline:·compiler.time.total                                                           thrpt    4        8201.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc                                                                     thrpt    4     2178867.956 ±    186779.959  ops/s
JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc:·compiler.time.profiled                                             thrpt    4          80.000                     ms
JMHBenchmark_07_SumCalcWithCompileHint.noInvocationSumCalc:·compiler.time.total                                                thrpt    4        6780.000                     ms
JMHBenchmark_08_NumberOfSumCalc.baseline                                                                                       thrpt    4  1992743251.347 ± 170969386.167  ops/s
JMHBenchmark_08_NumberOfSumCalc.baseline:·compiler.time.profiled                                                               thrpt    4             ≈ 0                     ms
JMHBenchmark_08_NumberOfSumCalc.baseline:·compiler.time.total                                                                  thrpt    4        5589.000                     ms
JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke                                                                              thrpt    4      745510.795 ±     36583.293  ops/s
JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke:·compiler.time.profiled                                                      thrpt    4           2.000                     ms
JMHBenchmark_08_NumberOfSumCalc.longSumCalcInvoke:·compiler.time.total                                                         thrpt    4        5876.000                     ms
JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc                                                                      thrpt    4      749194.778 ±     28213.857  ops/s
JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc:·compiler.time.profiled                                              thrpt    4           2.000                     ms
JMHBenchmark_08_NumberOfSumCalc.noInvocationNumberSumCalc:·compiler.time.total                                                 thrpt    4        6114.000                     ms
JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke                                                                            thrpt    4      639377.518 ±    147409.324  ops/s
JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke:·compiler.time.profiled                                                    thrpt    4           1.000                     ms
JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvoke:·compiler.time.total                                                       thrpt    4        8770.000                     ms
JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested                                                                      thrpt    4      738819.067 ±    172234.058  ops/s
JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested:·compiler.time.profiled                                              thrpt    4             ≈ 0                     ms
JMHBenchmark_08_NumberOfSumCalc.numberSumCalcInvokeNested:·compiler.time.total                                                 thrpt    4        8439.000                     ms
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline                                                           thrpt    4      306736.193 ±     75519.087  ops/s
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.profiled                                   thrpt    4             ≈ 0                     ms
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithDontInline:·compiler.time.total                                      thrpt    4        5706.000                     ms
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline                                                               thrpt    4      357405.919 ±     86215.263  ops/s
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline:·compiler.time.profiled                                       thrpt    4           1.000                     ms
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.SumCalcWithInline:·compiler.time.total                                          thrpt    4        7850.000                     ms
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline                                                                        thrpt    4  1935611012.650 ± 163310011.355  ops/s
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline:·compiler.time.profiled                                                thrpt    4             ≈ 0                     ms
JMHBenchmark_09_NumberOfSumCalcWithCompileHint.baseline:·compiler.time.total                                                   thrpt    4        6243.000                     ms
JMHBenchmark_10_longSumCalc.baseline                                                                                           thrpt    4  1940946456.143 ± 277280691.118  ops/s
JMHBenchmark_10_longSumCalc.baseline:·compiler.time.profiled                                                                   thrpt    4           4.000                     ms
JMHBenchmark_10_longSumCalc.baseline:·compiler.time.total                                                                      thrpt    4        6526.000                     ms
JMHBenchmark_10_longSumCalc.longSumCalc                                                                                        thrpt    4      123491.296 ±     27896.616  ops/s
JMHBenchmark_10_longSumCalc.longSumCalc:·compiler.time.profiled                                                                thrpt    4           1.000                     ms
JMHBenchmark_10_longSumCalc.longSumCalc:·compiler.time.total                                                                   thrpt    4        7041.000                     ms
JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc                                                                            thrpt    4      106756.878 ±     27507.836  ops/s
JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc:·compiler.time.profiled                                                    thrpt    4             ≈ 0                     ms
JMHBenchmark_10_longSumCalc.noInvocationlongSumCalc:·compiler.time.total                                                       thrpt    4        6369.000                     ms
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline                                                            thrpt    4  2070636206.622 ± 219023125.839  ops/s
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline:·compiler.time.profiled                                    thrpt    4          79.000                     ms
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.baseline:·compiler.time.total                                       thrpt    4        5951.000                     ms
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline                                               thrpt    4       31200.498 ±      1378.591  ops/s
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline:·compiler.time.profiled                       thrpt    4           5.000                     ms
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithDontInline:·compiler.time.total                          thrpt    4        5365.000                     ms
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline                                                   thrpt    4       34092.641 ±       800.479  ops/s
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline:·compiler.time.profiled                           thrpt    4           3.000                     ms
JMHBenchmark_11_NumberOfSumCalcWithLongCalcWithCompileHint.sumCalcWithInline:·compiler.time.total                              thrpt    4        5742.000                     ms

Benchmark result is saved to results/linux-graal+Inline-comp.txt
